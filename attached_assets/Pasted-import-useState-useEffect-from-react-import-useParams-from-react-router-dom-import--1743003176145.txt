import { useState, useEffect } from "react";
import { useParams } from "react-router-dom";
import { supabase } from "@/lib/supabase";
import { UserProfile } from "@/types"; // Assuming you have a type definition

const Profile = () => {
  const { id } = useParams<{ id: string }>();
  const [profile, setProfile] = useState<UserProfile | null>(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    const fetchProfile = async () => {
      if (!id) return;

      setLoading(true);
      try {
        const { data, error } = await supabase
          .from("profiles")
          .select("*")
          .eq("id", id)
          .single();

        if (error) throw error;

        setProfile({
          id: data?.id || "1",
          name: data?.name || "New User",
          age: data?.age || 20,
          location: data?.location || "Unknown",
          bio: data?.bio || "Excited to learn a new language!",
          nativeLanguage: data?.native_language || "English",
          learningLanguage: data?.learning_language || "Spanish",
          proficiencyLevel: data?.proficiency_level || "Beginner (A1)",
          streak: data?.streak || 0,
          joinDate: data?.join_date || new Date().toISOString().split("T")[0],
          interests: data?.interests || ["Reading", "Music"],
          avatar: data?.avatar || "/placeholder.svg",
          likes: data?.likes || 0,
          liked: data?.liked || false,
          learning: {
            vocabulary: data?.learning?.vocabulary || 0,
            grammar: data?.learning?.grammar || 0,
            speaking: data?.learning?.speaking || 0,
            listening: data?.learning?.listening || 0,
          },
          achievements: data?.achievements || [],
        });
      } catch (err) {
        console.error("Error fetching profile:", err);
      } finally {
        setLoading(false);
      }
    };

    fetchProfile();
  }, [id]);

  if (loading) {
    return <p>Loading profile...</p>;
  }

  if (!profile) {
    return <p>Profile not found.</p>;
  }

  return (
    <div>
      <h1>{profile.name}</h1>
      <p>{profile.bio}</p>
    </div>
  );
};

export default Profile;