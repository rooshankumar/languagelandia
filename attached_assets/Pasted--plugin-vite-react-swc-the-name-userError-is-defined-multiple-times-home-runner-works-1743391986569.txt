[plugin:vite:react-swc] × the name `userError` is defined multiple times
     ╭─[/home/runner/workspace/src/pages/Onboarding.tsx:217:1]
 214 │     try {
 215 │       setIsLoading(true);
 216 │       const formData = form.getValues();
 217 │       const { data: { user }, error: userError } = await supabase.auth.getUser();
     ·                                      ────┬────
     ·                                          ╰── previous definition of `userError` here
 218 │ 
 219 │       if (userError || !user) {
 220 │         toast({
 221 │           variant: "destructive",
 222 │           title: "Authentication error",
 223 │           description: "You must be logged in to complete onboarding.",
 224 │         });
 225 │         navigate("/auth");
 226 │         return;
 227 │       }
 228 │ 
 229 │       // Format the data properly
 230 │       const userData = {
 231 │         id: user.id,
 232 │         full_name: formData.full_name,
 233 │         gender: formData.gender,
 234 │         date_of_birth: formData.date_of_birth instanceof Date ? 
 235 │           formData.date_of_birth.toISOString().split('T')[0] : 
 236 │           null,
 237 │         native_language: formData.native_language,
 238 │         learning_language: formData.learning_language,
 239 │         proficiency_level: formData.proficiency_level,
 240 │         learning_goal: formData.learning_goal,
 241 │         avatar_url: formData.avatar_url,
 242 │         updated_at: new Date().toISOString()
 243 │       };
 244 │ 
 245 │       console.log("Submitting onboarding data:", userData);
 246 │ 
 247 │       const { error: profileError } = await supabase
 248 │         .from('profiles')
 249 │         .update({
 250 │           gender: formData.gender,
 251 │           date_of_birth: formData.date_of_birth,
 252 │           native_language: formData.native_language,
 253 │           learning_language: formData.learning_language,
 254 │           proficiency_level: formData.proficiency_level,
 255 │           learning_goal: formData.learning_goal,
 256 │           avatar_url: formData.avatar_url,
 257 │           full_name: formData.full_name,
 258 │           updated_at: new Date().toISOString()
 259 │         })
 260 │         .eq('user_id', user.id);
 261 │ 
 262 │       if (profileError) {
 263 │         console.error('Error updating profile data:', profileError);
 264 │         toast({
 265 │           variant: "destructive",
 266 │           title: "Error",
 267 │           description: "Failed to update profile. Please try again.",
 268 │         });
 269 │         return;
 270 │       }
 271 │ 
 272 │       // Update onboarding status in users table
 273 │       const { error: userError } = await supabase
     ·                      ────┬────
     ·                          ╰── `userError` redefined here
 274 │         .from('users')
 275 │         .update({
 276 │           onboarding_completed: true,
     ╰────
  × the name `profileError` is defined multiple times
     ╭─[/home/runner/workspace/src/pages/Onboarding.tsx:247:1]
 244 │ 
 245 │       console.log("Submitting onboarding data:", userData);
 246 │ 
 247 │       const { error: profileError } = await supabase
     ·                      ──────┬─────
     ·                            ╰── previous definition of `profileError` here
 248 │         .from('profiles')
 249 │         .update({
 250 │           gender: formData.gender,
 251 │           date_of_birth: formData.date_of_birth,
 252 │           native_language: formData.native_language,
 253 │           learning_language: formData.learning_language,
 254 │           proficiency_level: formData.proficiency_level,
 255 │           learning_goal: formData.learning_goal,
 256 │           avatar_url: formData.avatar_url,
 257 │           full_name: formData.full_name,
 258 │           updated_at: new Date().toISOString()
 259 │         })
 260 │         .eq('user_id', user.id);
 261 │ 
 262 │       if (profileError) {
 263 │         console.error('Error updating profile data:', profileError);
 264 │         toast({
 265 │           variant: "destructive",
 266 │           title: "Error",
 267 │           description: "Failed to update profile. Please try again.",
 268 │         });
 269 │         return;
 270 │       }
 271 │ 
 272 │       // Update onboarding status in users table
 273 │       const { error: userError } = await supabase
 274 │         .from('users')
 275 │         .update({
 276 │           onboarding_completed: true,
 277 │           updated_at: new Date().toISOString()
 278 │         })
 279 │         .eq('id', user.id);
 280 │ 
 281 │       if (userError) {
 282 │         console.error('Error updating user data:', userError);
 283 │         toast({
 284 │           variant: "destructive",
 285 │           title: "Error",
 286 │           description: "Failed to update user status. Please try again.",
 287 │         });
 288 │         return;
 289 │       }
 290 │ 
 291 │ 
 292 │       // First update the users table
 293 │       const { error: userUpdateError } = await supabase
 294 │         .from('users')
 295 │         .update({
 296 │           full_name: formData.name,
 297 │           avatar_url: formData.avatarUrl || null,
 298 │           updated_at: new Date().toISOString()
 299 │         })
 300 │         .eq('id', user.id);
 301 │ 
 302 │       if (userUpdateError) {
 303 │         console.error('Error updating user:', userUpdateError);
 304 │         toast({
 305 │           variant: "destructive",
 306 │           title: "Error updating profile",
 307 │           description: "Failed to update basic profile information.",
 308 │         });
 309 │         return;
 310 │       }
 311 │ 
 312 │       // Then update user profile data (assuming user_profiles table exists)
 313 │       const { error: profileError } = await supabase
     ·                      ──────┬─────
     ·                            ╰── `profileError` redefined here
 314 │         .from('user_profiles')
 315 │         .upsert({
 316 │           user_id: user.id,
     ╰────
/home/runner/workspace/src/pages/Onboarding.tsx:217:1