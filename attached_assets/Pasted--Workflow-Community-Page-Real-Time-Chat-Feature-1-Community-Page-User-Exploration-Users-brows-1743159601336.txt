 Workflow: Community Page & Real-Time Chat Feature
1️⃣ Community Page (User Exploration)
Users browse profiles of others in the community page.

They can view basic profile details (name, profile picture, last active, etc.).

If they find a suitable profile, they can click to start a conversation.

If a conversation already exists between the two users, they will be redirected to their chat instead of creating a new one.

2️⃣ Starting a Chat (Conversation Creation)
🔹 Scenario 1: First-Time Chat

When User A messages User B for the first time:

A new conversation is created in the conversations table.

Both users are added as participants in the conversation_participants table.

The first message is inserted into the messages table.

The chat interface loads the new conversation in real-time.

🔹 Scenario 2: Existing Conversation

If a conversation already exists,

The app fetches the conversation ID from the conversations table.

The chat opens with previous messages loaded from the messages table.

3️⃣ Sending a Message (Real-Time Messaging)
When User A sends a message:

The message is inserted into the messages table.

The conversation_id ensures the message is linked to the correct chat.

The recipient (User B) receives the message instantly using Supabase Realtime.

The is_read field remains false until User B opens the chat.

4️⃣ Receiving Messages (Live Updates)
When User B opens the chat:

The chat fetches all unread messages.

Messages are updated with is_read = true.

A "User is typing…" indicator appears when someone is actively responding.

5️⃣ Loading Chat List (Inbox)
The chat list shows all conversations where the user is a participant.

The latest message from each chat is displayed.

Unread messages are highlighted for better UX.

6️⃣ Handling Edge Cases
✅ If a conversation is deleted, all messages should be removed or archived.
✅ If a user blocks another user, messages should not be delivered.
✅ If a message fails to send (network issue), it should retry automatically.