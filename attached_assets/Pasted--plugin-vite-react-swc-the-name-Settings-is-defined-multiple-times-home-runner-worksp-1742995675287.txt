[plugin:vite:react-swc] × the name `Settings` is defined multiple times
     ╭─[/home/runner/workspace/src/pages/Settings.tsx:52:1]
  49 │   onLogout: () => void;
  50 │ }
  51 │ 
  52 │ const Settings = ({ onLogout }: SettingsProps) => {
     ·       ────┬───
     ·           ╰── previous definition of `Settings` here
  53 │   const { theme, setTheme } = useTheme();
  54 │   const { toast } = useToast();
  55 │   
  56 │   const [profileData, setProfileData] = useState({
  57 │     name: "Sarah Johnson",
  58 │     bio: "Software engineer passionate about learning Spanish for my upcoming trip to Mexico.",
  59 │     email: "sarah.johnson@example.com",
  60 │     avatar: "/placeholder.svg",
  61 │     nativeLanguage: "English",
  62 │     learningLanguage: "Spanish",
  63 │     proficiencyLevel: "Intermediate (B1)",
  64 │   });
  65 │   
  66 │   const [privacySettings, setPrivacySettings] = useState({
  67 │     showOnlineStatus: true,
  68 │     showLastActive: true,
  69 │     allowMessages: true,
  70 │     showProfileInSearch: true,
  71 │   });
  72 │   
  73 │   const [notificationSettings, setNotificationSettings] = useState({
  74 │     newMessages: true,
  75 │     profileViews: true,
  76 │     learningReminders: true,
  77 │     streakReminders: true,
  78 │     marketingEmails: false,
  79 │   });
  80 │   
  81 │   const languages = [
  82 │     "English", "Spanish", "French", "German", "Italian",
  83 │     "Portuguese", "Chinese", "Japanese", "Korean", "Russian",
  84 │     "Arabic", "Hindi", "Turkish", "Dutch", "Swedish"
  85 │   ];
  86 │   
  87 │   const proficiencyLevels = [
  88 │     "Beginner (A1)", "Elementary (A2)", "Intermediate (B1)", 
  89 │     "Upper Intermediate (B2)", "Advanced (C1)", "Proficient (C2)"
  90 │   ];
  91 │   
  92 │   const handleProfileChange = (field: string, value: string) => {
  93 │     setProfileData(prev => ({
  94 │       ...prev,
  95 │       [field]: value
  96 │     }));
  97 │   };
  98 │   
  99 │   const handlePrivacyChange = (field: string, value: boolean) => {
 100 │     setPrivacySettings(prev => ({
 101 │       ...prev,
 102 │       [field]: value
 103 │     }));
 104 │   };
 105 │   
 106 │   const handleNotificationChange = (field: string, value: boolean) => {
 107 │     setNotificationSettings(prev => ({
 108 │       ...prev,
 109 │       [field]: value
 110 │     }));
 111 │   };
 112 │   
 113 │   const handleSaveProfile = () => {
 114 │     // In a real app, this would save to a backend
 115 │     toast({
 116 │       title: "Profile updated",
 117 │       description: "Your profile information has been saved.",
 118 │     });
 119 │   };
 120 │   
 121 │   const handleSavePrivacy = () => {
 122 │     toast({
 123 │       title: "Privacy settings updated",
 124 │       description: "Your privacy preferences have been saved.",
 125 │     });
 126 │   };
 127 │   
 128 │   const handleSaveNotifications = () => {
 129 │     toast({
 130 │       title: "Notification settings updated",
 131 │       description: "Your notification preferences have been saved.",
 132 │     });
 133 │   };
 134 │   
 135 │   const handleChangePassword = () => {
 136 │     toast({
 137 │       title: "Password change requested",
 138 │       description: "We've sent a password reset link to your email.",
 139 │     });
 140 │   };
 141 │   
 142 │   const handleUploadAvatar = () => {
 143 │     // In a real app, this would open a file picker
 144 │     toast({
 145 │       title: "Feature coming soon",
 146 │       description: "Avatar upload functionality will be available in the next update.",
 147 │     });
 148 │   };
 149 │   
 150 │   const handleLogout = () => {
 151 │     toast({
 152 │       title: "Logging out",
 153 │       description: "You have been successfully logged out.",
 154 │     });
 155 │     onLogout();
 156 │   };
 157 │   
 158 │   return (
 159 │     <div className="container pb-12 animate-fade-in">
 160 │       <div className="space-y-2 mb-8">
 161 │         <h1 className="text-3xl font-bold tracking-tight">Settings</h1>
 162 │         <p className="text-muted-foreground">
 163 │           Manage your account preferences and settings
 164 │         </p>
 165 │       </div>
 166 │       
 167 │       <Tabs defaultValue="profile" className="mb-8">
 168 │         <TabsList className="grid grid-cols-4 mb-8">
 169 │           <TabsTrigger value="profile" className="flex items-center">
 170 │             <User className="h-4 w-4 mr-2" />
 171 │             <span className="hidden sm:inline">Profile</span>
 172 │           </TabsTrigger>
 173 │           <TabsTrigger value="privacy" className="flex items-center">
 174 │             <Shield className="h-4 w-4 mr-2" />
 175 │             <span className="hidden sm:inline">Privacy</span>
 176 │           </TabsTrigger>
 177 │           <TabsTrigger value="notifications" className="flex items-center">
 178 │             <Bell className="h-4 w-4 mr-2" />
 179 │             <span className="hidden sm:inline">Notifications</span>
 180 │           </TabsTrigger>
 181 │           <TabsTrigger value="account" className="flex items-center">
 182 │             <Key className="h-4 w-4 mr-2" />
 183 │             <span className="hidden sm:inline">Account</span>
 184 │           </TabsTrigger>
 185 │         </TabsList>
 186 │         
 187 │         {/* Profile Settings */}
 188 │         <TabsContent value="profile" className="space-y-6">
 189 │           <Card>
 190 │             <CardHeader>
 191 │               <CardTitle>Profile Information</CardTitle>
 192 │               <CardDescription>
 193 │                 Update your personal information and language preferences
 194 │               </CardDescription>
 195 │             </CardHeader>
 196 │             <CardContent className="space-y-6">
 197 │               <div className="flex flex-col md:flex-row md:space-x-6">
 198 │                 <div className="flex flex-col items-center space-y-4 mb-6 md:mb-0">
 199 │                   <Avatar className="h-24 w-24">
 200 │                     <AvatarImage src={profileData.avatar} alt={profileData.name} />
 201 │                     <AvatarFallback>{profileData.name.charAt(0)}</AvatarFallback>
 202 │                   </Avatar>
 203 │                   <Button variant="outline" onClick={handleUploadAvatar}>
 204 │                     Change Avatar
 205 │                   </Button>
 206 │                 </div>
 207 │                 
 208 │                 <div className="flex-1 space-y-4">
 209 │                   <div className="grid gap-4">
 210 │                     <div className="space-y-2">
 211 │                       <Label htmlFor="name">Full Name</Label>
 212 │                       <Input 
 213 │                         id="name" 
 214 │                         value={profileData.name}
 215 │                         onChange={(e) => handleProfileChange("name", e.target.value)}
 216 │                       />
 217 │                     </div>
 218 │                     
 219 │                     <div className="space-y-2">
 220 │                       <Label htmlFor="email">Email</Label>
 221 │                       <Input 
 222 │                         id="email" 
 223 │                         type="email" 
 224 │                         value={profileData.email}
 225 │                         onChange={(e) => handleProfileChange("email", e.target.value)}
 226 │                       />
 227 │                     </div>
 228 │                     
 229 │                     <div className="space-y-2">
 230 │                       <Label htmlFor="bio">Bio</Label>
 231 │                       <Textarea 
 232 │                         id="bio" 
 233 │                         value={profileData.bio}
 234 │                         onChange={(e) => handleProfileChange("bio", e.target.value)}
 235 │                         className="min-h-[100px]"
 236 │                       />
 237 │                     </div>
 238 │                   </div>
 239 │                 </div>
 240 │               </div>
 241 │               
 242 │               <Separator />
 243 │               
 244 │               <div className="space-y-4">
 245 │                 <h3 className="text-lg font-medium">Language Settings</h3>
 246 │                 
 247 │                 <div className="grid gap-4 sm:grid-cols-2">
 248 │                   <div className="space-y-2">
 249 │                     <Label htmlFor="nativeLanguage">Native Language</Label>
 250 │                     <Select
 251 │                       value={profileData.nativeLanguage}
 252 │                       onValueChange={(value) => handleProfileChange("nativeLanguage", value)}
 253 │                     >
 254 │                       <SelectTrigger id="nativeLanguage">
 255 │                         <SelectValue placeholder="Select language" />
 256 │                       </SelectTrigger>
 257 │                       <SelectContent>
 258 │                         {languages.map((language) => (
 259 │                           <SelectItem key={language} value={language}>
 260 │                             {language}
 261 │                           </SelectItem>
 262 │                         ))}
 263 │                       </SelectContent>
 264 │                     </Select>
 265 │                   </div>
 266 │                   
 267 │                   <div className="space-y-2">
 268 │                     <Label htmlFor="learningLanguage">Learning Language</Label>
 269 │                     <Select
 270 │                       value={profileData.learningLanguage}
 271 │                       onValueChange={(value) => handleProfileChange("learningLanguage", value)}
 272 │                     >
 273 │                       <SelectTrigger id="learningLanguage">
 274 │                         <SelectValue placeholder="Select language" />
 275 │                       </SelectTrigger>
 276 │                       <SelectContent>
 277 │                         {languages
 278 │                           .filter((lang) => lang !== profileData.nativeLanguage)
 279 │                           .map((language) => (
 280 │                             <SelectItem key={language} value={language}>
 281 │                               {language}
 282 │                             </SelectItem>
 283 │                           ))
 284 │                         }
 285 │                       </SelectContent>
 286 │                     </Select>
 287 │                   </div>
 288 │                   
 289 │                   <div className="space-y-2 sm:col-span-2">
 290 │                     <Label htmlFor="proficiencyLevel">Proficiency Level</Label>
 291 │                     <Select
 292 │                       value={profileData.proficiencyLevel}
 293 │                       onValueChange={(value) => handleProfileChange("proficiencyLevel", value)}
 294 │                     >
 295 │                       <SelectTrigger id="proficiencyLevel">
 296 │                         <SelectValue placeholder="Select level" />
 297 │                       </SelectTrigger>
 298 │                       <SelectContent>
 299 │                         {proficiencyLevels.map((level) => (
 300 │                           <SelectItem key={level} value={level}>
 301 │                             {level}
 302 │                           </SelectItem>
 303 │                         ))}
 304 │                       </SelectContent>
 305 │                     </Select>
 306 │                   </div>
 307 │                 </div>
 308 │               </div>
 309 │             </CardContent>
 310 │             <CardFooter>
 311 │               <Button onClick={handleSaveProfile} className="button-hover">
 312 │                 <Save className="h-4 w-4 mr-2" />
 313 │                 Save Changes
 314 │               </Button>
 315 │             </CardFooter>
 316 │           </Card>
 317 │         </TabsContent>
 318 │         
 319 │         {/* Privacy Settings */}
 320 │         <TabsContent value="privacy" className="space-y-6">
 321 │           <Card>
 322 │             <CardHeader>
 323 │               <CardTitle>Privacy Preferences</CardTitle>
 324 │               <CardDescription>
 325 │                 Control who can see your information and how they can interact with you
 326 │               </CardDescription>
 327 │             </CardHeader>
 328 │             <CardContent className="space-y-4">
 329 │               <div className="space-y-4">
 330 │                 <div className="flex items-center justify-between">
 331 │                   <div className="space-y-0.5">
 332 │                     <Label htmlFor="showOnlineStatus">Show online status</Label>
 333 │                     <p className="text-sm text-muted-foreground">
 334 │                       Allow others to see when you're active on the platform
 335 │                     </p>
 336 │                   </div>
 337 │                   <Switch
 338 │                     id="showOnlineStatus"
 339 │                     checked={privacySettings.showOnlineStatus}
 340 │                     onCheckedChange={(value) => handlePrivacyChange("showOnlineStatus", value)}
 341 │                   />
 342 │                 </div>
 343 │                 
 344 │                 <Separator />
 345 │                 
 346 │                 <div className="flex items-center justify-between">
 347 │                   <div className="space-y-0.5">
 348 │                     <Label htmlFor="showLastActive">Show last active time</Label>
 349 │                     <p className="text-sm text-muted-foreground">
 350 │                       Allow others to see when you were last active
 351 │                     </p>
 352 │                   </div>
 353 │                   <Switch
 354 │                     id="showLastActive"
 355 │                     checked={privacySettings.showLastActive}
 356 │                     onCheckedChange={(value) => handlePrivacyChange("showLastActive", value)}
 357 │                   />
 358 │                 </div>
 359 │                 
 360 │                 <Separator />
 361 │                 
 362 │                 <div className="flex items-center justify-between">
 363 │                   <div className="space-y-0.5">
 364 │                     <Label htmlFor="allowMessages">Allow messages</Label>
 365 │                     <p className="text-sm text-muted-foreground">
 366 │                       Allow other users to send you direct messages
 367 │                     </p>
 368 │                   </div>
 369 │                   <Switch
 370 │                     id="allowMessages"
 371 │                     checked={privacySettings.allowMessages}
 372 │                     onCheckedChange={(value) => handlePrivacyChange("allowMessages", value)}
 373 │                   />
 374 │                 </div>
 375 │                 
 376 │                 <Separator />
 377 │                 
 378 │                 <div className="flex items-center justify-between">
 379 │                   <div className="space-y-0.5">
 380 │                     <Label htmlFor="showProfileInSearch">Show profile in search</Label>
 381 │                     <p className="text-sm text-muted-foreground">
 382 │                       Allow your profile to appear in search results
 383 │                     </p>
 384 │                   </div>
 385 │                   <Switch
 386 │                     id="showProfileInSearch"
 387 │                     checked={privacySettings.showProfileInSearch}
 388 │                     onCheckedChange={(value) => handlePrivacyChange("showProfileInSearch", value)}
 389 │                   />
 390 │                 </div>
 391 │               </div>
 392 │             </CardContent>
 393 │             <CardFooter>
 394 │               <Button onClick={handleSavePrivacy} className="button-hover">
 395 │                 <Save className="h-4 w-4 mr-2" />
 396 │                 Save Preferences
 397 │               </Button>
 398 │             </CardFooter>
 399 │           </Card>
 400 │         </TabsContent>
 401 │         
 402 │         {/* Notification Settings */}
 403 │         <TabsContent value="notifications" className="space-y-6">
 404 │           <Card>
 405 │             <CardHeader>
 406 │               <CardTitle>Notification Settings</CardTitle>
 407 │               <CardDescription>
 408 │                 Choose which notifications you'd like to receive
 409 │               </CardDescription>
 410 │             </CardHeader>
 411 │             <CardContent className="space-y-4">
 412 │               <div className="space-y-4">
 413 │                 <div className="flex items-center justify-between">
 414 │                   <div className="space-y-0.5">
 415 │                     <Label htmlFor="newMessages">New messages</Label>
 416 │                     <p className="text-sm text-muted-foreground">
 417 │                       Get notified when you receive new messages
 418 │                     </p>
 419 │                   </div>
 420 │                   <Switch
 421 │                     id="newMessages"
 422 │                     checked={notificationSettings.newMessages}
 423 │                     onCheckedChange={(value) => handleNotificationChange("newMessages", value)}
 424 │                   />
 425 │                 </div>
 426 │                 
 427 │                 <Separator />
 428 │                 
 429 │                 <div className="flex items-center justify-between">
 430 │                   <div className="space-y-0.5">
 431 │                     <Label htmlFor="profileViews">Profile views</Label>
 432 │                     <p className="text-sm text-muted-foreground">
 433 │                       Get notified when someone views your profile
 434 │                     </p>
 435 │                   </div>
 436 │                   <Switch
 437 │                     id="profileViews"
 438 │                     checked={notificationSettings.profileViews}
 439 │                     onCheckedChange={(value) => handleNotificationChange("profileViews", value)}
 440 │                   />
 441 │                 </div>
 442 │                 
 443 │                 <Separator />
 444 │                 
 445 │                 <div className="flex items-center justify-between">
 446 │                   <div className="space-y-0.5">
 447 │                     <Label htmlFor="learningReminders">Learning reminders</Label>
 448 │                     <p className="text-sm text-muted-foreground">
 449 │                       Get daily reminders to practice your language
 450 │                     </p>
 451 │                   </div>
 452 │                   <Switch
 453 │                     id="learningReminders"
 454 │                     checked={notificationSettings.learningReminders}
 455 │                     onCheckedChange={(value) => handleNotificationChange("learningReminders", value)}
 456 │                   />
 457 │                 </div>
 458 │                 
 459 │                 <Separator />
 460 │                 
 461 │                 <div className="flex items-center justify-between">
 462 │                   <div className="space-y-0.5">
 463 │                     <Label htmlFor="streakReminders">Streak reminders</Label>
 464 │                     <p className="text-sm text-muted-foreground">
 465 │                       Get reminded to maintain your daily streak
 466 │                     </p>
 467 │                   </div>
 468 │                   <Switch
 469 │                     id="streakReminders"
 470 │                     checked={notificationSettings.streakReminders}
 471 │                     onCheckedChange={(value) => handleNotificationChange("streakReminders", value)}
 472 │                   />
 473 │                 </div>
 474 │                 
 475 │                 <Separator />
 476 │                 
 477 │                 <div className="flex items-center justify-between">
 478 │                   <div className="space-y-0.5">
 479 │                     <Label htmlFor="marketingEmails">Marketing emails</Label>
 480 │                     <p className="text-sm text-muted-foreground">
 481 │                       Receive updates about new features and offers
 482 │                     </p>
 483 │                   </div>
 484 │                   <Switch
 485 │                     id="marketingEmails"
 486 │                     checked={notificationSettings.marketingEmails}
 487 │                     onCheckedChange={(value) => handleNotificationChange("marketingEmails", value)}
 488 │                   />
 489 │                 </div>
 490 │               </div>
 491 │             </CardContent>
 492 │             <CardFooter>
 493 │               <Button onClick={handleSaveNotifications} className="button-hover">
 494 │                 <Save className="h-4 w-4 mr-2" />
 495 │                 Save Preferences
 496 │               </Button>
 497 │             </CardFooter>
 498 │           </Card>
 499 │         </TabsContent>
 500 │         
 501 │         {/* Account Settings */}
 502 │         <TabsContent value="account" className="space-y-6">
 503 │           <Card>
 504 │             <CardHeader>
 505 │               <CardTitle>Account Settings</CardTitle>
 506 │               <CardDescription>
 507 │                 Manage your account security and preferences
 508 │               </CardDescription>
 509 │             </CardHeader>
 510 │             <CardContent className="space-y-8">
 511 │               <div className="space-y-4">
 512 │                 <h3 className="text-lg font-medium">Security</h3>
 513 │                 
 514 │                 <div className="space-y-4">
 515 │                   <div className="flex items-center justify-between">
 516 │                     <div>
 517 │                       <h4 className="font-medium">Password</h4>
 518 │                       <p className="text-sm text-muted-foreground">
 519 │                         Change your account password
 520 │                       </p>
 521 │                     </div>
 522 │                     <Button variant="outline" onClick={handleChangePassword}>
 523 │                       <Lock className="h-4 w-4 mr-2" />
 524 │                       Change
 525 │                     </Button>
 526 │                   </div>
 527 │                   
 528 │                   <div className="flex items-center justify-between">
 529 │                     <div>
 530 │                       <h4 className="font-medium">Email</h4>
 531 │                       <p className="text-sm text-muted-foreground">
 532 │                         {profileData.email}
 533 │                       </p>
 534 │                     </div>
 535 │                     <Button variant="outline">
 536 │                       <Mail className="h-4 w-4 mr-2" />
 537 │                       Update
 538 │                     </Button>
 539 │                   </div>
 540 │                 </div>
 541 │               </div>
 542 │               
 543 │               <Separator />
 544 │               
 545 │               <div className="space-y-4">
 546 │                 <h3 className="text-lg font-medium">Appearance</h3>
 547 │                 
 548 │                 <div className="space-y-4">
 549 │                   <div className="flex items-center justify-between">
 550 │                     <div>
 551 │                       <h4 className="font-medium">Theme</h4>
 552 │                       <p className="text-sm text-muted-foreground">
 553 │                         Choose your preferred appearance
 554 │                       </p>
 555 │                     </div>
 556 │                     <div className="flex space-x-2">
 557 │                       <Button
 558 │                         variant={theme === "light" ? "default" : "outline"}
 559 │                         size="sm"
 560 │                         onClick={() => setTheme("light")}
 561 │                       >
 562 │                         <Sun className="h-4 w-4 mr-2" />
 563 │                         Light
 564 │                       </Button>
 565 │                       <Button
 566 │                         variant={theme === "dark" ? "default" : "outline"}
 567 │                         size="sm"
 568 │                         onClick={() => setTheme("dark")}
 569 │                       >
 570 │                         <Moon className="h-4 w-4 mr-2" />
 571 │                         Dark
 572 │                       </Button>
 573 │                       <Button
 574 │                         variant={theme === "system" ? "default" : "outline"}
 575 │                         size="sm"
 576 │                         onClick={() => setTheme("system")}
 577 │                       >
 578 │                         <Globe className="h-4 w-4 mr-2" />
 579 │                         System
 580 │                       </Button>
 581 │                     </div>
 582 │                   </div>
 583 │                 </div>
 584 │               </div>
 585 │               
 586 │               <Separator />
 587 │               
 588 │               <div className="space-y-4">
 589 │                 <h3 className="text-lg font-medium">Subscription</h3>
 590 │                 
 591 │                 <div className="bg-muted/50 rounded-lg p-4">
 592 │                   <div className="flex justify-between items-center mb-4">
 593 │                     <div>
 594 │                       <h4 className="font-medium">Free Plan</h4>
 595 │                       <p className="text-sm text-muted-foreground">
 596 │                         You're currently on the free plan
 597 │                       </p>
 598 │                     </div>
 599 │                     <Button>
 600 │                       <Wallet className="h-4 w-4 mr-2" />
 601 │                       Upgrade
 602 │                     </Button>
 603 │                   </div>
 604 │                   <ul className="text-sm space-y-2">
 605 │                     <li className="flex items-center">
 606 │                       <svg className="h-4 w-4 mr-2 text-primary" fill="none" viewBox="0 0 24 24" stroke="currentColor">
 607 │                         <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
 608 │                       </svg>
 609 │                       Basic conversation features
 610 │                     </li>
 611 │                     <li className="flex items-center">
 612 │                       <svg className="h-4 w-4 mr-2 text-primary" fill="none" viewBox="0 0 24 24" stroke="currentColor">
 613 │                         <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
 614 │                       </svg>
 615 │                       Community access
 616 │                     </li>
 617 │                     <li className="flex items-center text-muted-foreground">
 618 │                       <svg className="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
 619 │                         <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
 620 │                       </svg>
 621 │                       Advanced learning tools (Premium)
 622 │                     </li>
 623 │                     <li className="flex items-center text-muted-foreground">
 624 │                       <svg className="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
 625 │                         <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
 626 │                       </svg>
 627 │                       AI-powered conversation practice (Premium)
 628 │                     </li>
 629 │                   </ul>
 630 │                 </div>
 631 │               </div>
 632 │             </CardContent>
 633 │             <CardFooter className="flex justify-between">
 634 │               <Button variant="outline" className="text-destructive">
 635 │                 Delete Account
 636 │               </Button>
 637 │               <Button variant="destructive" onClick={handleLogout}>
 638 │                 <LogOut className="h-4 w-4 mr-2" />
 639 │                 Logout
 640 │               </Button>
 641 │             </CardFooter>
 642 │           </Card>
 643 │         </TabsContent>
 644 │       </Tabs>
 645 │     </div>
 646 │   );
 647 │ };
 648 │ 
 649 │ export default Settings;
 650 │ export default function Settings() {
     ·                         ────┬───
     ·                             ╰── `Settings` redefined here
 651 │   return (
 652 │     <div className="container mx-auto py-6">
 653 │       <h1 className="text-3xl font-bold">Settings</h1>
     ╰────
  × the name `default` is exported multiple times
     ╭─[/home/runner/workspace/src/pages/Settings.tsx:649:1]
 646 │       );
 647 │     };
 648 │     
 649 │     export default Settings;
     ·     ────────────┬───────────
     ·                 ╰── previous exported here
 650 │ ╭─▶ export default function Settings() {
 651 │ │     return (
 652 │ │       <div className="container mx-auto py-6">
 653 │ │         <h1 className="text-3xl font-bold">Settings</h1>
 654 │ │       </div>
 655 │ │     )
 656 │ ├─▶ }
     · ╰──── exported more than once
     ╰────

Advice:   ☞ Exported identifiers must be unique
/home/runner/workspace/src/pages/Settings.tsx:52:1
302|                            </SelectItem>
303|                          ))}
304|                        </SelectContent>
   |           ^
305|                      </Select>
306|                    </div>